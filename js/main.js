!function(I){var l={};function e(t){if(l[t])return l[t].exports;var n=l[t]={i:t,l:!1,exports:{}};return I[t].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=I,e.c=l,e.d=function(I,l,t){e.o(I,l)||Object.defineProperty(I,l,{enumerable:!0,get:t})},e.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},e.t=function(I,l){if(1&l&&(I=e(I)),8&l)return I;if(4&l&&"object"==typeof I&&I&&I.__esModule)return I;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:I}),2&l&&"string"!=typeof I)for(var n in I)e.d(t,n,function(l){return I[l]}.bind(null,n));return t},e.n=function(I){var l=I&&I.__esModule?function(){return I.default}:function(){return I};return e.d(l,"a",l),l},e.o=function(I,l){return Object.prototype.hasOwnProperty.call(I,l)},e.p="",e(e.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\n\n// service worker registration - remove if you\'re not going to use it\n\nif ("serviceWorker" in navigator) {\n  window.addEventListener("load", function () {\n    navigator.serviceWorker.register("serviceworker.js").then(\n      function (registration) {\n        // Registration was successful\n        console.log(\n          "ServiceWorker registration successful with scope: ",\n          registration.scope\n        );\n      },\n      function (err) {\n        // registration failed :(\n        console.log("ServiceWorker registration failed: ", err);\n      }\n    );\n  });\n}\n\n// place your code below\n\nconst inputValue = document.querySelector(".form-field__input--js");\nconst repository = document.querySelector(".repository-wrapper--js");\nconst repositoryTitle = document.querySelector(".repository__title--js");\nconst repositoryData = document.querySelector(".repository__content--js");\nconst sortBy = document.querySelector(".form-field__select--sort-js");\nconst sortDirection = document.querySelector(".form-field__select--direction-js");\nconst submitButton = document.querySelector(".form__button--js");\n\nsubmitButton.addEventListener("click", e => {\n  e.preventDefault();\n  let username = inputValue.value;\n  fetch(`https://api.github.com/users/${username}/repos?sort=${sortBy.value}&direction=${sortDirection.value}`)\n    .then(resp => resp.json())\n    .then(resp => {\n      if (resp.message && resp.message.includes("Not Found")) {\n        userNotFound(username);\n      } else {\n        console.log(resp)\n        listRepozitories(resp, username);\n      }\n    })\n    .catch((error) => {\n      console.log(error)\n    });\n})\n\nconst userNotFound = (username) => {\n  let resp = `\n          <div class="shell">\n            <div class="shell__top-bar">Error</div>\n            <div class="shell__button shell__button--left"></div>\n            <div class="shell__button shell__button--middle"></div>\n            <div class="shell__button shell__button--right"></div>\n            <ul class="shell__body">\n              <li class="shell__body-element">User with username: ${username} doesn\'t exists</li>\n            </ul>\n          </div>\n        `;\n  repository.innerHTML = resp;\n}\n\nconst listRepozitories = (data, username) => {\n  console.log(sortBy.value)\n  console.log(sortDirection.value)\n  if (data.length) {\n    let temp = `<div class="shell">\n                  <div class="shell__top-bar">${username} repos</div>\n                  <div class="shell__button shell__button--left"></div>\n                  <div class="shell__button shell__button--middle"></div>\n                  <div class="shell__button shell__button--right"></div>\n                  <ul class="shell__body">\n                    <li class="shell__body-element"><img class="shell__image" src="${data[0][\'owner\'][\'avatar_url\']}" alt="Repository owner username image."></li>\n                  </ul>\n                </div>`;\n    for (let i = 0; i < data.length; i++) {\n      const name = data[i]["name"];\n      const path = data[i]["url"];\n      const creationTime = data[i]["created_at"].slice(0, 10);\n      const lastUpdate = data[i]["updated_at"].slice(0, 10);\n      const description = data[i]["description"];\n      temp += `\n          <div class="shell">\n            <div class="shell__top-bar">${i + 1}. $${window.innerWidth < 640 ? name.slice(0, 15) : name}</div>\n            <div class="shell__button shell__button--left"></div>\n            <div class="shell__button shell__button--middle"></div>\n            <div class="shell__button shell__button--right"></div>\n            <ul class="shell__body">\n              <li class="shell__body-element">name: ${name}</li>\n              <li class="shell__body-element">path: <a href="${path}">${path}</a></li>\n              <li class="shell__body-element">created:  ${creationTime}</li>\n              <li class="shell__body-element">updated: ${lastUpdate}</li>\n              <li class="shell__body-element">description: ${description ? description : \'No description for this project\'}</li>\n            </ul>\n          </div>\n    `;\n    }\n    repository.innerHTML = temp;\n  } else {\n    let resp = `\n              <div class="shell">\n                <div class="shell__top-bar">${username} repositories</div>\n                <div class="shell__button shell__button--left"></div>\n                <div class="shell__button shell__button--middle"></div>\n                <div class="shell__button shell__button--right"></div>\n                <ul class="shell__body">\n                  <li class="shell__body-element">User with username: ${username} doesn\'t have public repositories</li>\n                </ul>\n              </div>\n                    `;\n    repository.innerHTML = resp;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz85MjkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxTQUFTLGNBQWMsYUFBYSxhQUFhLG9CQUFvQjtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsU0FBUztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsU0FBUztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRiwrQkFBK0I7QUFDcEg7QUFDQTtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsTUFBTSxLQUFLLG1EQUFtRDtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxLQUFLO0FBQzNELCtEQUErRCxLQUFLLElBQUksS0FBSztBQUM3RSwwREFBMEQsYUFBYTtBQUN2RSx5REFBeUQsV0FBVztBQUNwRSw2REFBNkQsOERBQThEO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLDhDQUE4QyxTQUFTO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLFNBQVM7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gc2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uIC0gcmVtb3ZlIGlmIHlvdSdyZSBub3QgZ29pbmcgdG8gdXNlIGl0XG5cbmlmIChcInNlcnZpY2VXb3JrZXJcIiBpbiBuYXZpZ2F0b3IpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcihcInNlcnZpY2V3b3JrZXIuanNcIikudGhlbihcbiAgICAgIGZ1bmN0aW9uIChyZWdpc3RyYXRpb24pIHtcbiAgICAgICAgLy8gUmVnaXN0cmF0aW9uIHdhcyBzdWNjZXNzZnVsXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIFwiU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCB3aXRoIHNjb3BlOiBcIixcbiAgICAgICAgICByZWdpc3RyYXRpb24uc2NvcGVcbiAgICAgICAgKTtcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIC8vIHJlZ2lzdHJhdGlvbiBmYWlsZWQgOihcbiAgICAgICAgY29uc29sZS5sb2coXCJTZXJ2aWNlV29ya2VyIHJlZ2lzdHJhdGlvbiBmYWlsZWQ6IFwiLCBlcnIpO1xuICAgICAgfVxuICAgICk7XG4gIH0pO1xufVxuXG4vLyBwbGFjZSB5b3VyIGNvZGUgYmVsb3dcblxuY29uc3QgaW5wdXRWYWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybS1maWVsZF9faW5wdXQtLWpzXCIpO1xuY29uc3QgcmVwb3NpdG9yeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVwb3NpdG9yeS13cmFwcGVyLS1qc1wiKTtcbmNvbnN0IHJlcG9zaXRvcnlUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmVwb3NpdG9yeV9fdGl0bGUtLWpzXCIpO1xuY29uc3QgcmVwb3NpdG9yeURhdGEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlcG9zaXRvcnlfX2NvbnRlbnQtLWpzXCIpO1xuY29uc3Qgc29ydEJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtLWZpZWxkX19zZWxlY3QtLXNvcnQtanNcIik7XG5jb25zdCBzb3J0RGlyZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtLWZpZWxkX19zZWxlY3QtLWRpcmVjdGlvbi1qc1wiKTtcbmNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fYnV0dG9uLS1qc1wiKTtcblxuc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBsZXQgdXNlcm5hbWUgPSBpbnB1dFZhbHVlLnZhbHVlO1xuICBmZXRjaChgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy8ke3VzZXJuYW1lfS9yZXBvcz9zb3J0PSR7c29ydEJ5LnZhbHVlfSZkaXJlY3Rpb249JHtzb3J0RGlyZWN0aW9uLnZhbHVlfWApXG4gICAgLnRoZW4ocmVzcCA9PiByZXNwLmpzb24oKSlcbiAgICAudGhlbihyZXNwID0+IHtcbiAgICAgIGlmIChyZXNwLm1lc3NhZ2UgJiYgcmVzcC5tZXNzYWdlLmluY2x1ZGVzKFwiTm90IEZvdW5kXCIpKSB7XG4gICAgICAgIHVzZXJOb3RGb3VuZCh1c2VybmFtZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXNwKVxuICAgICAgICBsaXN0UmVwb3ppdG9yaWVzKHJlc3AsIHVzZXJuYW1lKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgIH0pO1xufSlcblxuY29uc3QgdXNlck5vdEZvdW5kID0gKHVzZXJuYW1lKSA9PiB7XG4gIGxldCByZXNwID0gYFxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX190b3AtYmFyXCI+RXJyb3I8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLWxlZnRcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLW1pZGRsZVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX19idXR0b24gc2hlbGxfX2J1dHRvbi0tcmlnaHRcIj48L2Rpdj5cbiAgICAgICAgICAgIDx1bCBjbGFzcz1cInNoZWxsX19ib2R5XCI+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz1cInNoZWxsX19ib2R5LWVsZW1lbnRcIj5Vc2VyIHdpdGggdXNlcm5hbWU6ICR7dXNlcm5hbWV9IGRvZXNuJ3QgZXhpc3RzPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gIHJlcG9zaXRvcnkuaW5uZXJIVE1MID0gcmVzcDtcbn1cblxuY29uc3QgbGlzdFJlcG96aXRvcmllcyA9IChkYXRhLCB1c2VybmFtZSkgPT4ge1xuICBjb25zb2xlLmxvZyhzb3J0QnkudmFsdWUpXG4gIGNvbnNvbGUubG9nKHNvcnREaXJlY3Rpb24udmFsdWUpXG4gIGlmIChkYXRhLmxlbmd0aCkge1xuICAgIGxldCB0ZW1wID0gYDxkaXYgY2xhc3M9XCJzaGVsbFwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX190b3AtYmFyXCI+JHt1c2VybmFtZX0gcmVwb3M8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLWxlZnRcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLW1pZGRsZVwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX19idXR0b24gc2hlbGxfX2J1dHRvbi0tcmlnaHRcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz1cInNoZWxsX19ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cInNoZWxsX19ib2R5LWVsZW1lbnRcIj48aW1nIGNsYXNzPVwic2hlbGxfX2ltYWdlXCIgc3JjPVwiJHtkYXRhWzBdWydvd25lciddWydhdmF0YXJfdXJsJ119XCIgYWx0PVwiUmVwb3NpdG9yeSBvd25lciB1c2VybmFtZSBpbWFnZS5cIj48L2xpPlxuICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5gO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgbmFtZSA9IGRhdGFbaV1bXCJuYW1lXCJdO1xuICAgICAgY29uc3QgcGF0aCA9IGRhdGFbaV1bXCJ1cmxcIl07XG4gICAgICBjb25zdCBjcmVhdGlvblRpbWUgPSBkYXRhW2ldW1wiY3JlYXRlZF9hdFwiXS5zbGljZSgwLCAxMCk7XG4gICAgICBjb25zdCBsYXN0VXBkYXRlID0gZGF0YVtpXVtcInVwZGF0ZWRfYXRcIl0uc2xpY2UoMCwgMTApO1xuICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSBkYXRhW2ldW1wiZGVzY3JpcHRpb25cIl07XG4gICAgICB0ZW1wICs9IGBcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwic2hlbGxcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fdG9wLWJhclwiPiR7aSArIDF9LiAkJHt3aW5kb3cuaW5uZXJXaWR0aCA8IDY0MCA/IG5hbWUuc2xpY2UoMCwgMTUpIDogbmFtZX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLWxlZnRcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzaGVsbF9fYnV0dG9uIHNoZWxsX19idXR0b24tLW1pZGRsZVwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX19idXR0b24gc2hlbGxfX2J1dHRvbi0tcmlnaHRcIj48L2Rpdj5cbiAgICAgICAgICAgIDx1bCBjbGFzcz1cInNoZWxsX19ib2R5XCI+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz1cInNoZWxsX19ib2R5LWVsZW1lbnRcIj5uYW1lOiAke25hbWV9PC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPVwic2hlbGxfX2JvZHktZWxlbWVudFwiPnBhdGg6IDxhIGhyZWY9XCIke3BhdGh9XCI+JHtwYXRofTwvYT48L2xpPlxuICAgICAgICAgICAgICA8bGkgY2xhc3M9XCJzaGVsbF9fYm9keS1lbGVtZW50XCI+Y3JlYXRlZDogICR7Y3JlYXRpb25UaW1lfTwvbGk+XG4gICAgICAgICAgICAgIDxsaSBjbGFzcz1cInNoZWxsX19ib2R5LWVsZW1lbnRcIj51cGRhdGVkOiAke2xhc3RVcGRhdGV9PC9saT5cbiAgICAgICAgICAgICAgPGxpIGNsYXNzPVwic2hlbGxfX2JvZHktZWxlbWVudFwiPmRlc2NyaXB0aW9uOiAke2Rlc2NyaXB0aW9uID8gZGVzY3JpcHRpb24gOiAnTm8gZGVzY3JpcHRpb24gZm9yIHRoaXMgcHJvamVjdCd9PC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgYDtcbiAgICB9XG4gICAgcmVwb3NpdG9yeS5pbm5lckhUTUwgPSB0ZW1wO1xuICB9IGVsc2Uge1xuICAgIGxldCByZXNwID0gYFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2hlbGxcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2hlbGxfX3RvcC1iYXJcIj4ke3VzZXJuYW1lfSByZXBvc2l0b3JpZXM8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2hlbGxfX2J1dHRvbiBzaGVsbF9fYnV0dG9uLS1sZWZ0XCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX19idXR0b24gc2hlbGxfX2J1dHRvbi0tbWlkZGxlXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNoZWxsX19idXR0b24gc2hlbGxfX2J1dHRvbi0tcmlnaHRcIj48L2Rpdj5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJzaGVsbF9fYm9keVwiPlxuICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwic2hlbGxfX2JvZHktZWxlbWVudFwiPlVzZXIgd2l0aCB1c2VybmFtZTogJHt1c2VybmFtZX0gZG9lc24ndCBoYXZlIHB1YmxpYyByZXBvc2l0b3JpZXM8L2xpPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICBgO1xuICAgIHJlcG9zaXRvcnkuaW5uZXJIVE1MID0gcmVzcDtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')}]);